#!/bin/bash
#
# docker-osx
# ==========
#
# Easy installation of Docker on OS X
# https://github.com/noplay/docker-osx
#
# Copyright 2013 Julien Duponchelle
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
# file except in compliance with the License. You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions
# and limitations under the License.

set -e

export VAGRANT_CWD="$HOME/.docker-osx"
export FORWARD_DOCKER_PORTS="yes"

export DOCKER_VERSION="0.7.2"
export DOCKER_CLIENT_URL="http://static.orchardup.com/binaries/docker/docker-darwin-amd64-0.7.2-dev"
export VAGRANT_BOX_URL="http://static.orchardup.com/binaries/vagrant/vagrant-docker-0.7.2-virtualbox.box"

DOCKER_BIN="$VAGRANT_CWD/bin/docker"
DOCKER_CMD="$DOCKER_BIN -H=tcp://127.0.0.1:4243"

# Determine currently installed version of Docker
INSTALLED_DOCKER_VERSION=""
if [ -f $VAGRANT_CWD/.docker-version ]
then
  INSTALLED_DOCKER_VERSION=`cat $VAGRANT_CWD/.docker-version`
fi

# Check that dependencies are installed
if ! hash vagrant 2>/dev/null
then
  echo "Error: you need to install vagrant before"
  echo "You can download it at http://www.vagrantup.com/"
  exit 1
fi

# Set up Vagrant directory
if [ ! -d "$VAGRANT_CWD" ]
then
  mkdir "$VAGRANT_CWD"
fi

cat > "$VAGRANT_CWD/Vagrantfile" <<EOL
Vagrant.configure("2") do |config|
  config.vm.box = "docker-0.7.2"
  config.vm.box_url = "$VAGRANT_BOX_URL"

  config.ssh.forward_agent = true
  config.vm.network :forwarded_port, :guest => 4243, :host => 4243

  vagrantfile_extra = "#{ENV['VAGRANT_CWD']}/Vagrantfile_extra.rb"
  eval File.open(vagrantfile_extra).read if File.exists?(vagrantfile_extra)

  config.vm.provision :shell, :inline => "apt-get update; apt-get install -y lxc-docker=$DOCKER_VERSION"
  config.vm.provision :shell, :inline => "echo 'export DOCKER_OPTS=\"-H unix:///var/run/docker.sock -H tcp://0.0.0.0:4243\"' >> /etc/default/docker"
  config.vm.synced_folder "$(echo ~)", "$(echo ~)", :create => true

  config.vm.provider :virtualbox do |vb|
    vb.customize ['modifyvm', :id, '--memory', ENV['VM_MEMORY'] || 1024]
    vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
    vb.customize ['modifyvm', :id, '--natdnsproxy1', 'on']
  end
end
EOL

# Download Docker client if it doesn't exist or needs updating
if [[ ! -f "$DOCKER_BIN" || $INSTALLED_DOCKER_VERSION != $DOCKER_VERSION ]]
then
  echo "Installing Docker $DOCKER_VERSION client..."
  mkdir -p "$VAGRANT_CWD/bin"
  curl "$DOCKER_CLIENT_URL" > /tmp/docker-osx-client
  mv /tmp/docker-osx-client "$DOCKER_BIN"
  chmod +x "$DOCKER_BIN"
fi

# Start virtual machine if it isn't running
if ! vagrant status | grep -q running
then
  if [[ $1 == "halt" ]]
  then
    echo "Docker is not running. Exiting"
    exit 0
  fi
  vagrant up
  vagrant ssh -c "sudo stop docker; sudo start docker"
fi

# Update Docker on virtual machine if it needs updating
if [[ $INSTALLED_DOCKER_VERSION != $DOCKER_VERSION ]]
then
  vagrant provision
fi

# Set current installed Docker version
echo $DOCKER_VERSION > $VAGRANT_CWD/.docker-version

function help() {
  $DOCKER_CMD help
  echo "Docker.sh additional commands:"
  echo "    halt      Halt docker daemon and virtual machine"
  echo "    ssh       Open SSH console on vagrant box"
  echo ""
}

case "$1" in
  ssh)
    vagrant ssh
    ;;
  halt)
    vagrant halt
    ;;
  help)
    help
    ;;
  "")
    help
    ;;
  *)
    $DOCKER_CMD $*
    exit $?
esac

